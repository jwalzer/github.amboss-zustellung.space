<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>puppet on Amboss-incoming</title>
    <link>https://github.amboss-zustellung.space/tags/puppet/</link>
    <description>Recent content in puppet on Amboss-incoming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Nov 2013 14:14:54 +0000</lastBuildDate><atom:link href="https://github.amboss-zustellung.space/tags/puppet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Monitoring_Puppet_with_Munin</title>
      <link>https://github.amboss-zustellung.space/posts/monitoring_puppet_with_munin/</link>
      <pubDate>Tue, 05 Nov 2013 14:14:54 +0000</pubDate>
      
      <guid>https://github.amboss-zustellung.space/posts/monitoring_puppet_with_munin/</guid>
      <description>#Monitoring Puppet with Munin
Just recently we had some hickups in our puppet infrastructure.
The question we were facing afterwards was, if all the nodes are regularily getting their updates. The specific problem is, that the infrastructure of the puppet and svn system is maintained by another department and so we don&amp;rsquo;t have access to their exact monitoring data.
So the idea was to write a munin plugin, that will alarm me, when one or many hosts are late for their updates.
This would be trivial. I wanted a special solution. I wanted the plugin itself, not only configured by the puppet, but I wanted it to be completely generated by puppet.
There is a puppet-module Concat which allows to build Textfiles from Fragments.
So My idea was, to generate a Plugin completely from fragments that are generated on all the puppetnodes themselfes. And Thats what I did: Put the following receipt into the manifest for the host, where the plugin should be shown:
 concat { &amp;quot;/usr/local/share/munin/plugins/puppetlastrun&amp;quot;: owner =&amp;gt; &#39;munin&#39;, group =&amp;gt; &#39;munin&#39;, mode =&amp;gt; &#39;755&#39;, notify =&amp;gt; Service[&amp;quot;munin-node&amp;quot;], } concat::fragment {&amp;quot;/usr/local/share/munin/plugins/puppetlastrun.header1&amp;quot;: target =&amp;gt; &amp;quot;/usr/local/share/munin/plugins/puppetlastrun&amp;quot;, order =&amp;gt; 04, content =&amp;gt; &amp;quot;#!/bin/bash # # Generated by Puppet: # $Revision # # if [ \&amp;quot;\$1\&amp;quot; = \&amp;quot;config\&amp;quot; ]; then echo &#39;graph_title Puppetrun-Ages&#39; echo &#39;graph_args --base 1000 -l 0 &#39; echo &#39;graph_category Updates&#39; echo &#39;graph_info This graph shows age of last puppetrun&#39; echo &#39;runtime.label last runtimes&#39; &amp;quot; } concat::fragment {&amp;quot;/usr/local/share/munin/plugins/puppetlastrun.header2&amp;quot;: target =&amp;gt; &amp;quot;/usr/local/share/munin/plugins/puppetlastrun&amp;quot;, order =&amp;gt; 06, content =&amp;gt; &#39;	exit 0 fi &#39; } concat::fragment {&amp;quot;/usr/local/share/munin/plugins/puppetlastrun.</description>
    </item>
    
  </channel>
</rss>
